plugins {
    id 'maven-publish'
    id 'signing'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}

ext {
    // Project constants
    github_org = 'Discord4J'
    project_name = 'Discord4J'
    artifact_group = 'com.discord4j'
    project_version = "$version"
    project_description = 'Bill of Materials (BOM) for Discord4J'
    project_url = 'https://discord4j.com'

    isRelease = !version.toString().endsWith('-SNAPSHOT')
}

group = artifact_group
version = project_version
description = project_description

repositories {
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'https://oss.sonatype.org/content/repositories/staging' }
}

dependencyManagement {
    dependencies {
        // standard style
        dependency "com.discord4j:discord4j-common:$discord4jVersion"
        dependency "com.discord4j:discord4j-command:$discord4jVersion"
        dependency "com.discord4j:discord4j-core:$discord4jVersion"
        dependency "com.discord4j:discord4j-gateway:$discord4jVersion"
        dependency "com.discord4j:discord4j-rest:$discord4jVersion"
        dependency "com.discord4j:discord4j-voice:$discord4jVersion"
        dependency "com.discord4j:stores-api:$storesVersion"
        dependency "com.discord4j:stores-common:$storesVersion"
        dependency "com.discord4j:stores-caffeine:$storesVersion"
        dependency "com.discord4j:stores-jdk:$storesVersion"
        dependency "com.discord4j:stores-redis:$storesVersion"
        dependency "com.discord4j:stores-tck:$storesVersion"
        // jitpack style
        dependency "com.discord4j.discord4j:discord4j-common:$discord4jJitpackVersion"
        dependency "com.discord4j.discord4j:discord4j-command:$discord4jJitpackVersion"
        dependency "com.discord4j.discord4j:discord4j-core:$discord4jJitpackVersion"
        dependency "com.discord4j.discord4j:discord4j-gateway:$discord4jJitpackVersion"
        dependency "com.discord4j.discord4j:discord4j-rest:$discord4jJitpackVersion"
        dependency "com.discord4j.discord4j:discord4j-voice:$discord4jJitpackVersion"
        dependency "com.discord4j.Stores:stores-api:$storesJitpackVersion"
        dependency "com.discord4j.Stores:stores-common:$storesJitpackVersion"
        dependency "com.discord4j.Stores:stores-caffeine:$storesJitpackVersion"
        dependency "com.discord4j.Stores:stores-jdk:$storesJitpackVersion"
        dependency "com.discord4j.Stores:stores-redis:$storesJitpackVersion"
        dependency "com.discord4j.Stores:stores-tck:$storesJitpackVersion"
    }
}

signing {
    sign configurations.archives
}

publishing {
    publications {
        maven(MavenPublication) {
            customizePom(pom)

            pom.withXml {
                def pomFile = file("${project.buildDir}/generated-pom.xml")
                writeTo(pomFile)
                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
                artifact(pomAscFile) {
                    classifier = null
                    extension = 'pom.asc'
                }
            }

            project.tasks.signArchives.signatureFiles.each {
                artifact(it) {
                    def matcher = it.file =~ /-(sources|javadoc)\.jar\.asc$/
                    if (matcher.find()) {
                        classifier = matcher.group(1)
                    } else {
                        classifier = null
                    }
                    extension = 'jar.asc'
                }
            }
        }
    }

    repositories {
        maven {
            if (isRelease) {
                url 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
            } else {
                url 'https://oss.sonatype.org/content/repositories/snapshots/'
            }
            if (project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')) {
                credentials {
                    username project.property('sonatypeUsername')
                    password project.property('sonatypePassword')
                }
            }
        }
    }
}

model {
    tasks.generatePomFileForMavenPublication {
        destination = file("$buildDir/generated-pom.xml")
    }
    tasks.publishMavenPublicationToMavenLocal {
        dependsOn project.tasks.signArchives
    }
    tasks.publishMavenPublicationToMavenRepository {
        dependsOn project.tasks.signArchives
    }
}

def customizePom(pom) {
    pom.withXml {
        def root = asNode()

        root.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            description 'Bill of Materials (BOM) for Discord4J'
            name 'BOM'
            url 'https://github.com/Discord4J/BOM'
            organization {
                name 'Discord4J'
                url 'https://discord4j.com'
            }
            issueManagement {
                system 'GitHub'
                url 'https://github.com/Discord4J/BOM/issues'
            }
            licenses {
                license {
                    name 'LGPL-3.0'
                    url 'https://github.com/Discord4J/BOM/LICENSE.txt'
                    distribution 'repo'
                }
            }
            scm {
                url 'https://github.com/Discord4J/BOM'
                connection 'scm:git:git://github.com/Discord4J/BOM.git'
                developerConnection 'scm:git:ssh://git@github.com:Discord4J/BOM.git'
            }
            developers {
                developer {
                    name 'The Discord4J Team'
                }
            }
        }
    }
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}
